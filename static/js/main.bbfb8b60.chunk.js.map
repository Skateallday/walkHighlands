{"version":3,"sources":["components/murnos.js","Walks.js","public_transport.js","random.js","footer.js","SVG/logo.svg","App.js","reportWebVitals.js","index.js"],"names":["walkData","id","name","height","region","distance","time","grade","public_transport","image_url","Walks","useState","data","setData","sortType","setSortType","useEffect","type","sortProperty","numberSorted","sort","a","b","console","log","sortArray","className","Form","Group","onChange","e","target","value","controlId","Label","Control","as","Table","striped","bordered","hover","map","index","WalksByPulicTransport","responsive","filter","publicTransport","includes","filteredName","RandomWalkGenerator","props","newNumber","bind","state","random","randomNumber","Math","floor","this","setState","Container","Row","Col","Button","onClick","walk","filteredId","src","alt","React","Component","Footer","href","App","Jumbotron","sm","logo","ButtonToolbar","to","path","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbfb8b60.chunk.js","sourcesContent":["export const walkData = [\n{   \nid:0,\nname :\"Meall Dearg from the north\", \nheight :905, \nregion :\"Glencoe and Kinlochleven\", \ndistance :\"8.5km / 5.25 miles\", \ntime :\"5-6 Hours\", \ngrade :4, \npublic_transport :\"Nearest bus Kinlochleven.\" ,\nimage_url:\"https://d3teiib5p3f439.cloudfront.net/munros/meall-dearg-aonach-eagach-1.JPG\"\n},\n\n{ \nid:1,\nname:\"Bidean nam Bian\", \nheight:1316, \nregion:\"Glencoe and Kinlochleven\", \ndistance:\"11km / 6.75 miles\",\ntime:\"7-9 Hours\", \ngrade:4, \npublic_transport:\"Glasgow - Fort William and Skye buses passes along the A82(T).\",\nimage_url:\"https://d3teiib5p3f439.cloudfront.net/munros/bidean-nam-bian-1.JPG\" },\n\n{ \n    id:2,\nname:\"Ben Starav and Glas Bheinn Mhòr\", \nheight:1423, \nregion:\"Glencoe and Kinlochleven\", \ndistance:\"16.0km / 10 miles\",\ntime:\"8-9 Hours\", \ngrade:4, \npublic_transport:\"None.\",\nimage_url:\"https://www.walkhighlands.co.uk/fortwilliam/2_4/2_4_5l.JPG\" },\n\n{ \n    id:3,\nname:\"Aonach Mòr and Beag via the Gondola\", \nheight:860, \nregion:\"Fort William and Glen Nevis\", \ndistance:\"9.5km / 6 miles\",\ntime:\"4.5-5.5 Hours\", \ngrade:4, \npublic_transport:\"The foot of the Nevis Range gondola can be reached by bus from Fort William and Spean Bridge.\",\nimage_url:\"https://www.walkhighlands.co.uk/fortwilliam/4_37/4_37_7l.JPG\" },\n\n{ \n    id:4,\nname:\"The Ring of Steall, Mamores\", \nheight:1676, \nregion:\"Fort William and Glen Nevis\", \ndistance:\"16km / 10 miles\",\ntime:\"9-12 Hours\", \ngrade:5, \npublic_transport:\"Bus service between May and September as far as the bridge at the Polldubh Falls.\",\nimage_url:\"https://www.walkhighlands.co.uk/fortwilliam/4_1/4_1_1l.JPG\" },\n\n{ \n    id:5,\nname:\"Stob Coire Easain and Stob a'Choire Mheadhoin\", \nheight:1172, \nregion:\"Spean Bridge, Roybridge and Loch Ossian\", \ndistance:\"16.5km / 10.25 miles\",\ntime:\"7-8 Hours\", \ngrade:4, \npublic_transport:\"No buses to Fersit.\",\nimage_url: \"https://www.walkhighlands.co.uk/fortwilliam/4_15/4_15_6l.JPG\" }\n];\n","import React, { useState, useEffect } from 'react';\nimport \"./App.css\";\nimport { walkData } from \"./components/murnos\";\nimport Table from 'react-bootstrap/Table'\nimport Form from 'react-bootstrap/Form'\n\n\n\nfunction Walks() {\n    const [data, setData] = useState([]);\n    const [sortType, setSortType] = useState('height');\n  \n    useEffect(() => {\n      const sortArray = type => {\n        const types = {\n          name: 'name',\n          height: 'height',\n          region: 'region',\n          public_transport: 'public_transport',\n          grade: 'grade'\n        };\n        const sortProperty = types[type];\n        const numberSorted = [...walkData].sort((a, b) => a[sortProperty] - b[sortProperty] );\n\n        console.log(numberSorted);\n        setData(numberSorted);\n      };\n  \n      sortArray(sortType);\n    }, [sortType]); \n\n    \n  \n    return (\n      <div className=\"Table\">\n\n\n        <Form.Group onChange={(e) => setSortType(e.target.value)} controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label>Height or Grade</Form.Label>\n            <Form.Control as=\"select\">\n                  <option value=\"height\">Height</option>\n                  <option value=\"grade\">Grade</option>\n            </Form.Control>\n        </Form.Group>\n \n  \n          <Table striped bordered hover >\n            <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Height</th>\n                    <th>Region</th>\n                    <th>Public Transport</th>\n                    <th>Grade</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                {data.map((walkData, index) => (\n\n            <tr key={index}>\n              <td key={walkData.name}>{walkData.name}</td>\n              <td key={walkData.height}>{walkData.height}m</td>\n              <td key={walkData.region}>{walkData.region}</td>\n              <td key={walkData.public_transport}>{walkData.public_transport}</td>\n              <td key={walkData.grade}>{walkData.grade}</td>\n            </tr>\n                    ))}\n\n            </tbody>\n          </Table>\n\n          <hr />\n\n      </div>\n    );\n  }\n\nexport default Walks;","import React from 'react';\nimport \"./App.css\";\nimport { walkData } from \"./components/murnos\";\nimport Table from 'react-bootstrap/Table'\n\n\nfunction WalksByPulicTransport() {\n\n\n    return (\n      <div className=\"Table\">\n          <h3>Public Transport</h3>\n          <hr />\n\n                    \n            <Table responsive striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Height</th>\n                    <th>Region</th>\n                    <th>Public Transport</th>\n                    <th>Grade</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n\n                {walkData.filter(publicTransport=> !publicTransport.public_transport.includes('No')).map((filteredName, id) => (\n\n                <tr key={id} >\n\n                      <td>{filteredName.name}</td>\n                      <td>{filteredName.height}m</td>\n                      <td>{filteredName.region}</td>\n                      <td>{filteredName.public_transport}</td>\n                      <td>{filteredName.grade}</td>\n\n                </tr>   \n\n                ))}\n             \n                </tbody>\n              </Table> \n\n              <hr />\n\n        </div>\n\n\n    );\n  }\n\nexport default WalksByPulicTransport","import React from 'react';\nimport \"./App.css\";\nimport { walkData } from \"./components/murnos\";\nimport { Button, Container, Row, Col } from 'react-bootstrap';\n\nclass RandomWalkGenerator extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.newNumber = this.newNumber.bind(this);\n        this.state = { random : 0};\n    }\n\n    newNumber(){\n        const randomNumber = Math.floor(Math.random() * 5) + 1;\n        this.setState({ random: 0 + randomNumber})\n        console.log(this.state.random)\n\n    }\nrender(){\n\n    return (\n      <div className=\"App\">\n\n        <Container>\n        <Row>\n            <Col>\n                <h3>Random Walk</h3>\n            </Col>\n            \n            <Col>      \n                <Button className=\"float-right\"  onClick={this.newNumber.bind(this)}> Generate New Walk</Button>\n            </Col>\n        </Row>\n        </Container>\n\n          <hr />\n\n         \n                {walkData.filter(walk => walk.id === this.state.random).map((filteredId, id) => (\n<Container>\n          <Row key={id} >\n                <Col>\n                  <img src={filteredId.image_url} alt=\"Picutre of mountain\" className=\"mountains\" />\n                </Col>\n\n                <Col>\n                  <h3>{filteredId.name}</h3>\n                  <br />\n                  <h5>Height: {filteredId.height}m </h5>\n                  <br />\n                  <h5>Region: {filteredId.region} </h5>\n                  <br />\n                  <h5>Aviable by Public Transpot? {filteredId.public_transport} </h5>\n                  <br />\n                  <h5> Difficulty (out of 5): {filteredId.grade}</h5>\n                </Col>\n          </Row>   \n          </Container>\n                ))}\n\n<hr />\n\n             \n        </div>\n\n\n    );\n  }\n\n}\nexport default RandomWalkGenerator;","import React from 'react';\nimport './App.css';\n\n\nimport { Container, Row, Col } from 'react-bootstrap';\n\n\nfunction Footer() {\n  return (\n\n    \n      <Container  className=\"Footer\">\n          <Row>\n              <Col><h5>Created by <a href=\"https://www.jamfish.co.uk\">Jamfish</a> 2021</h5></Col>\n          </Row>\n    </Container>\n\n\n)};\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/logo.ba2f8436.svg\";","import React from 'react';\nimport './App.css';\nimport  Walks from './Walks';\nimport WalksByPulicTransport from './public_transport';\nimport RandomWalkGenerator from './random';\nimport Footer from './footer';\nimport {\n  MemoryRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport logo from './SVG/logo.svg';\n\nimport { Jumbotron } from 'react-bootstrap';\nimport { Button, Container, Row, Col } from 'react-bootstrap';\nimport { ButtonToolbar } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\n\nfunction App() {\n  return (\n\n    <MemoryRouter>\n      <Container className=\"p-3\">\n\n        <Jumbotron>\n          <Row>\n            <Col  sm={7}>          <h1>Welcome to React-Highlands</h1>\n            <h2>Search the Walk Highlands Website with more options</h2>\n\n</Col>\n            <Col  sm={5}>          <img src={logo} alt=\"Logo\" />\n</Col>\n            </Row>\n            \n\n\n          <ButtonToolbar className=\"custom-btn-toolbar\">\n\n              <LinkContainer to=\"/\">\n                <Button className=\"NavButton\">Home</Button>\n                </LinkContainer>\n            \n              <LinkContainer to=\"/walks\">\n                <Button className=\"NavButton\">Walks by Numbers</Button>\n                </LinkContainer>\n            \n              <LinkContainer to=\"/public-transport\">\n                <Button className=\"NavButton\">Walks by Public Transport</Button>\n                </LinkContainer>\n\n                <LinkContainer to=\"/random\">\n                <Button className=\"NavButton\">Random Walk</Button>\n                </LinkContainer>\n\n          </ButtonToolbar>\n        </Jumbotron>\n\n\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n        <Route path=\"/walks\">\n            <Walks />\n          </Route>\n          <Route path=\"/walks\">\n            <Walks />\n          </Route>\n          <Route path='/public-transport'>\n            <WalksByPulicTransport />\n          </Route>\n          <Route path='/random'>\n            <RandomWalkGenerator />\n          </Route>\n          \n        </Switch>\n\n      </Container>\n\n\n      <Container className=\"p-3 bodyText\">\n        <Row>\n\n          <Col md={6}> \n          <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/09/BenNevis2005.jpg\" alt=\"Ben Nevis\" className=\"mountains\" />\n          </Col>\n\n        <Col md={6}>          \n          <h2>About This Site</h2>  \n          <p>I created this site as a way to get better at using React, a Javascript framework created by Facebook. It has a lot of practical uses in modern day web development including its modular design that is powered through hooks.</p>\n          <p>The reason I chose to mimic the <a href=\"https://www.walkhighlands.co.uk\">Walk Highlands</a> website was due to my extended use of the website. It is a great tool for any hillwalker in Scotland (and the rest of the UK!), however it is a little old at this point in time.</p>\n          <p>As I don't have a car I always rely on pubilc transport to get me from point A to point B. When it comes to hillwalking, that can be a massive factor on where you can and can't go.</p>\n          <p>The WH website has great guides on all the <a href=\"https://en.wikipedia.org/wiki/Munro\">Munros</a> in Scotland. It will give you the starting location, height, grade and bog factor of the hill and sometimes even public transport information!</p>          \n        </Col>\n\n        </Row>\n        <Row>\n\n         <Col md={12}>\n          <p>However, it does not let you search by public transport. So many times I think I've found the perfect Munro to master on my long weekend but, upon looking at the route realise that it is not accessible by public transport. So I have to keep searching.</p>\n          <p>So here, on this site, I have created some dummy data similar to that found on WH and have created a function that will filter out results that have \"No\", \"Not available\" or \"None\" next to the public transport variable. I have added a few other features and will continue to work on this as a way to extend my knowledge of both React and Scotland's wonderful mountain ranges.</p>\n        </Col>\n\n        </Row>\n      </Container>\n\n\n      <Footer />\n\n    </MemoryRouter>\n\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}